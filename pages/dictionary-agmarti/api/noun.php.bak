<?php

header('Content-Type: application/json; charset=utf-8');

require_once __DIR__ . '/../common.php';
require_once __DIR__ . '/../connect.php';

$id = isset($_GET['id']) ? (int)$_GET['id'] : 0;
if ($id <= 0) {
    echo json_encode(['success' => false, 'error' => 'bad id'], JSON_UNESCAPED_UNICODE);
    exit;
}

try {
    // именительный ед. числа берём из words.word_view
    $sql = "
        SELECT
            n.id,
            n.word_ID,
            w.word_view AS nominative_s,

            n.ergative_s,
            n.dative_s,
            n.genetive_s,
            n.instrumental_s,
            n.transformative_s,
            n.vocative_s,

            n.nominative_p,
            n.ergative_p,
            n.dative_p,
            n.genetive_p,
            n.instrumental_p,
            n.transformative_p,
            n.vacative_p
        FROM noun AS n
        JOIN words AS w ON w.id = n.word_ID
        WHERE n.word_ID = :id
        LIMIT 1
    ";

    $stmt = $pdo->prepare($sql);
    $stmt->execute([':id' => $id]);
    $row = $stmt->fetch(PDO::FETCH_ASSOC);

    if (!$row) {
        echo json_encode(['success' => true, 'exists' => false, 'cases' => null], JSON_UNESCAPED_UNICODE);
        exit;
    }

    $norm = static function ($v) {
        $v = trim((string)$v);
        return ($v === '' || $v === '-') ? '' : $v;
    };

    $order = ['nominative','ergative','dative','genitive','instrumental','transformative','vocative'];

    $cases = [
        'nominative'    => ['s' => $norm($row['nominative_s'] ?? ''),     'p' => $norm($row['nominative_p'] ?? '')],
        'ergative'      => ['s' => $norm($row['ergative_s'] ?? ''),       'p' => $norm($row['ergative_p'] ?? '')],
        'dative'        => ['s' => $norm($row['dative_s'] ?? ''),         'p' => $norm($row['dative_p'] ?? '')],
        'genitive'      => ['s' => $norm($row['genetive_s'] ?? ''),       'p' => $norm($row['genetive_p'] ?? '')],
        'instrumental'  => ['s' => $norm($row['instrumental_s'] ?? ''),   'p' => $norm($row['instrumental_p'] ?? '')],
        'transformative'=> ['s' => $norm($row['transformative_s'] ?? ''), 'p' => $norm($row['transformative_p'] ?? '')],
        'vocative'      => ['s' => $norm($row['vocative_s'] ?? ''),       'p' => $norm($row['vacative_p'] ?? '')],
    ];

    $labels = [
        'nominative'     => 'სახელობითი',
        'ergative'       => 'მოთხრობითი',
        'dative'         => 'მიცემითი',
        'genitive'       => 'ნათესაობითი',
        'instrumental'   => 'მოქმედებითი',
        'transformative' => 'ვითარებითი',
        'vocative'       => 'წოდებითი',
    ];

    echo json_encode([
        'success' => true,
        'exists'  => true,
        'order'   => $order,
        'labels'  => $labels,
        'cases'   => $cases,
    ], JSON_UNESCAPED_UNICODE);

} catch (Throwable $e) {
    error_log('noun.php error: ' . $e->getMessage());
    http_response_code(500);
    echo json_encode(['success' => false, 'error' => 'DB error'], JSON_UNESCAPED_UNICODE);
}
